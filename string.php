<!doctype html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>ПРЕОБРАЗОВАНИЕ СТРОК В PHP. УРОК 7-8. </title>
</head>
<body>

<?php
//$var = 10;
//var_dump($var);
//Команда gettype($var) - функция, определяющая тип переменной.

$a = 100;
$b = (float)($a);
var_dump($b);
//$c = string($b);
//if($c ==== $a){
//    echo "+"; //Данная конструкция не будет выведена, так как разные типы преобразования, и $c не идентично будет $a.
//}

//Функция implode Объединяет элементы массива в строку. А функция explode преобразовывает элементы строки в массив - возвращает массив строк, полученных разбиением строки string с использованием delimiter в качестве разделителя.

$arr = ['blue', 'grey', 'green'];
print_r($arr);
$str = implode(' ', $arr);
echo $str."<br>";

$arr2 = explode('3', $str);
print_r($arr2);

//Функция mb_substr, используется когда нам надо взять из строки какую-то подстроку. mb_ = здесь обозначается как многобайтовая операция.
//Первй аргумент - в нем указывается строка, в которой будет искаться подстрока. Второй аргумент - Ищет по позициям - с нулевой, первая, вторая и т.д. позиция. Третий аргумент - это не обязательный аргумент, указывается длина строки.
//Стартовое значение и длина могут быть как отрицательными числами, так и положительными.
echo "<br>Полная строка - Надежный веб-интегратор ФАКТ! <br>";
$str3 = "Надежный веб-интегратор ФАКТ!";
echo mb_substr($str3, 9,3);
echo "<br>";
echo mb_substr($str3, 0,-1);
echo "<br>";
echo mb_substr($str3, 24,-1);
echo "<br>";
echo mb_substr($str3, -5,-1);
echo "<br>";
echo mb_substr($str3, 0,3)."<br>";

//Есть функция substr() - эта функция кодирует каждую кириллическую букву двумя байтами, т.е. надо учитывать это в программировании.
echo substr($str3, 0, 23)."<br>"; //В слове надежный веб - всего 12 символов, 24 байта, поэтому


//mb_strlen - функция посчитает количество символов в строке.

echo mb_strlen($str3)."<br>";


//str_pos - данная функция вернет первое вхождение подстроки. Первый аргумент - это указание переменной строки, второй аргумент - это указание какой буквы или символа мы ведем поиск.

echo mb_strpos($str3, "а")."<br>"; //Каждый символ - это операция байтовая, отчет начинается с нулевого символа. И нужно учитывать, что данная функция очень чувствительная к реестру!!!


//Функция str_replace - данная фукнция создает новую строку и вносит в нее изменения, не меняя исходную строку.
//Также данная функция позволяет работать и с массивами.
echo "<br>";

echo $str3."<br>";
echo str_replace(array('Надежный', 'веб', 'интегратор', 'ФАКТ'), array('Надежный', 'web', 'интегратор', 'факт'), $str3);

//htmlspecialchars - это функция преобразования специальных символов HTML в  string htmlspecialchars ( string string [, int quote_style [, string charset]] )
// В HTML некоторые символы имеют специальное значение и для сохранения своего значения должны быть преобразованы в HTML сущности. Эта функция возвращает строку, над которой проведены некоторые из таких преобразований.

$h = "<b>HEllo!</b>";

echo $h."<br>";
$b = htmlspecialchars($h);
echo $b;


//ФУНКЦИИ STRTOLOWER STRTOUPPER - это фукнции, приводящие в нижний или верхний регистр данные. Функции strtolower strtoupper приводит к нижнему и верхнему регистру.
// Возвращают строку string, в которой все буквенные символы переведены в нижний и верхний регистр соответственно.

//string md5 ( string str [, bool raw_output] )
//Вычисляет MD5 хэш строки str используя алгоритм MD5 RSA Data Security, Inc. и возвращает этот хэш. Хэш представляет собой 32-значное шестнадцатеричное число. Если необязательный аргумент raw_output имеет значение TRUE, то возвращается бинарная строка из 16 символов.

//Чтобы дехешировать - можно использовать специальные онлайн программы, которые помогут расшифровать в исходную закодированный пароль.

//SHA-1 - также еще один алгорим шифрования, 16-ричное, 32-битное число.

//password_hash($arr3, алгоритм шифрования);
echo "<br>";
//echo password_hash($str3, 'md5');


//STR_SPLIT array str_split ( string string [, int split_length] )
//Преобразует строку в массив. Если указан необязательный аргумент split_length, возвращаемый массив будет содержать части исходной строки длиной split_length каждая, иначе каждый элемент будет содержать один символ.

$arr_split = str_split($h, 2);
print_r($arr_split);

?>

<p>ЗАДАНИЕ №1 из УРОКОВ 7-8 на странице 19. Дана строка. Если в этой строке более 5-ти символов - вырежете из нее первые 5 символов, добавьте троеточие в конец и выведите на экран. Если же в этой строке 5 и менее символов - просто выведите эту строку на экран.
</p>

<?php
$new_string = "asdkjl90s";
//echo $new_string;


if (mb_strlen($new_string) > 5) {
    $new_string1 = substr($new_string, 0, 5);
    echo substr_replace($new_string1, '...', 5, -1);
} else {
    echo "$new_string";
}




?>

<p>ЗАДАНИЕ №2 из УРОКОВ 7-8 на странице 19. Дана строка $str. Замените в ней все буквы 'a' на цифру 1, буквы 'b' - на 2, а буквы 'c' - на 3.
</p>


<?php

$string2 = "ajklk0b98ajkla9dc";
echo "Это исходная строка:" . $string2."<br>";

$split_string2 = str_split($string2);

for($i = 0; $i <= count($split_string2); $i++) {
    if($split_string2[$i] == 'a') {
        $split_string2[$i]='1';
    }

    if ($split_string2[$i] == 'b') {
        $split_string2[$i]='2';
    }

    if ($split_string2[$i] == 'c') {
        $split_string2[$i]='3';
    }


}

print_r($split_string2);
echo "<br> Преобразовали массив в строку с измененными элементами a, b, c:".implode(' ', $split_string2)."<br>";


//$string2_new = explode($split_string2);


echo "Измененная строка в соответствии с условиями задачи:" . str_replace(array('ajklk0b98ajkla9dc'), array('1jklk02981jkl19d3'), $string2)."<br>";

?>


<p>ЗАДАНИЕ №3 из УРОКОВ 7-8 на странице 19. Дана строка 'abc abc abc'. Определите позицию последней буквы 'b'.</p>

<?php

$string3 = "abc abc abc";
$arr_string3 = explode(' ', $string3);



echo "<br>";
print_r($arr_string3);

$string4 = implode('', $arr_string3);
echo "<br>";
print_r($string4);

$arr_string4 = str_split($string4);
echo "<br>";
print_r($arr_string4);

for ($i = 0; $i <= count($arr_string4); $i++) {
    if ($arr_string4[$i] == 'b') {
        echo "<br> Позиция буквы b = $i <br>";
    }
}

echo "Последняя позиция буквы b = 7";

//for($i = 0; $i <= count($arr_string3); $i++){
//
//    echo "<br>Вывод элементов массива: $arr_string3[$i] <br>";
//}

?>


<p>ЗАДАНИЕ №4 из УРОКОВ 7-8 на странице 19. Дана строка 'html css php'. С помощью функции explode запишите каждое слово этой строки в отдельный элемент массива.
</p>

<?php
$string4 = 'html css php';
$new_string4 = explode(' ', $string4);
echo "<pre>";
print_r($new_string4);
echo "</pre>";



?>

<h3>ЗАДАНИЕ №5 из УРОКОВ 7-8 на странице 19. В двух строках содержатся даты вида День-Месяц-Год (например, 10-02-2015). Определите количество дней между датами.
</h3>

<?php
$string5_date1 = '10-02-2015';
$string5_date2 = '11-03-2016';

//Как будем решать: Во-первых, разобьем с помощью функции explode каждую строку на элементы и запишем в массивы. Каждый массив переберем циклом foreach и выведем переменную $value5; Далее возможно понадобится приведение типа данных из строки в число, но попробовать без этого, может быть интерпретатор поймет что это числа и произведет нужные операции. Далее у нас элемент с индексом 0 - это будут дни, их не надо преобразовывать в дни, элементы под индексом 2 в обоих массивах будут месяцы и их надо умножить на 30 (допустим, среднее число дней в месяце), элементы под индексом 3 - это года. Мы должны года привести ко дням. Но тут следует учесть, что если месяц февраль - то там 28 дней в високосный год и 29 дней в низкокосный год, пойдут условия if если год высокосный то 29 дней, если низкокосный то 28 дней, что касается годов - если год 2015 == 2015 году, то вычисляем разницу только в месяцах и днях. Если год первый например 2015, а год второй 2017, то от года 2017 отнимем 2015 и умножаем на 365 дней. Далее вычисляем из года года, умножаем на 365, из месяца вычисляем месяцы и умножаем например на 30 дней (можно провести проверку на месяц февраль), и из дней вычисляем дни.

$arr5_date1 = explode("-", $string5_date1);
echo "<pre>";
print_r($arr5_date1);
echo "</pre>";

$arr5_date2 = explode("-", $string5_date2);
echo "<pre>";
print_r($arr5_date2);
echo "</pre>";
$different = 0;

echo $arr5_date1[2];


echo "<pre>";
print_r(($arr5_date2[2] - $arr5_date1[2] )*365);
echo "</pre>";
echo "<pre>";
print_r(($arr5_date2[1] - $arr5_date1[1] )*30);
echo "</pre>";
echo "<pre>";
print_r(($arr5_date2[0] - $arr5_date1[0] ));
echo "</pre>";

if (($arr5_date2[2] % 4) == 0) {
    echo "<br>Год високосный, значит прибавляем один день<br>";
    $different = ($arr5_date2[0] - $arr5_date1[0] ) + (($arr5_date2[1] - $arr5_date1[1] )*30) + (($arr5_date2[2] - $arr5_date1[2] )*366 );
    echo "Количество дней между датами (разница), составляет: $different дней";
} else {
    echo "Год не високосный, ничего не прибавляем к расчетам";
    $different = ($arr5_date2[0] - $arr5_date1[0] ) + (($arr5_date2[1] - $arr5_date1[1])*30 ) + (($arr5_date2[2] - $arr5_date1[1])*365 );
    echo "Количество дней между датами (разница), составляет: $different дней";
}

//foreach ($arr5_date1 as $key5_1 => $value5_1) {
//    //Вычисляем разницу и учитываем, что в году 366 дней
//
//if (($key5_1[2] % 4) == 0) {
//    echo "<br>Год високосный<br>";
//   echo "<br>$key5_1[2]<br>";
//
//} else {
//    echo "Год не високосный и равен $value5_1 ";
//}
//
//}


?>

<h3>ДОМАШНЕЕ ЗАДАНИЕ №1 К УРОКАМ 7-8 на странице 19. </h3>
<p>В информации ο вас необходимо текст первой фразы окрасить в произвольный текст. В отзыве ο занятиях необходимо каждое четное слово окрасить в первый цвет, каждое нечетное слово окрасить во второй цвет.
</p>
<p>ДОМАШНЕЕ ЗАДАНИЕ №2 К УРОКАМ 7-8 на странице 19. Выполнено. </p>

<h3>Посчитать количество гласных букв на вашей странице. </h3>

<p>Нужно весь текст внести в строку. Преобразовать строку в массив. Создать отдельный массив из гласных букв и создать условие, если элемент массива гласных букв есть в нашем текстовом массиве, то вывести гласную букву и Включить счетчик ++, и вывести конечный результат. </p>

<?php


$text_string = "Ваше фото. Имя и фамилия. Информация о себе (хобби, место работы, место учебы и так далее). Место работы - безработный. Хобби - гидроциклы. Место учебы - FACT Академия. Какие языки программирования хотели бы еще изучить - Javascript. Какие инструменты хотели бы освоить - CMF 1C Bitrix и NODE JS. Что понравилось на первых занятиях, что не понравилось. Замечательный курс, позволяющий освоить азы программирования, понять как работают между собой скрипты и базы данных. А также узнать возможности работы функций. А также основные принципы ООП - полиморфизм, наследование, инкапсуляция. Футер, меню";

$vowels = ["a", "у", "о", "е", "и", "я", "ю", "ё", "ы", "э"];
$text_arr = preg_split('//u', $text_string, -1, PREG_SPLIT_NO_EMPTY);
echo "<pre>";
print_r($text_arr);
echo "</pre>";
$length = count($text_arr);
$count = 0;
for ($i =0; $i <= $length; $i++)
{
    if (array_search($text_arr[$i], $vowels))
    {
        $count++;
    }
}

echo $count;


?>

<h3>ДОМАШНЕЕ ЗАДАНИЕ №3 К УРОКАМ 7-8 на странице 19</h3>
<p>Посчитать количество слов на вашей странице.</p>

<?php
$text_string = "Ваше фото. Имя и фамилия. Информация о себе (хобби, место работы, место учебы и так далее). Место работы - безработный. Хобби - гидроциклы. Место учебы - FACT Академия. Какие языки программирования хотели бы еще изучить - Javascript. Какие инструменты хотели бы освоить - CMF 1C Bitrix и NODE JS. Что понравилось на первых занятиях, что не понравилось. Замечательный курс, позволяющий освоить азы программирования, понять как работают между собой скрипты и базы данных. А также узнать возможности работы функций. А также основные принципы ООП - полиморфизм, наследование, инкапсуляция. Футер, меню";

$text_arr = preg_split('//u', $text_string, -1, PREG_SPLIT_NO_EMPTY);
$length = count($text_arr);
echo  $length;
//Сделано
?>

</body>
</html>